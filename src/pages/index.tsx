import Head from "next/head";
import { Gelasio } from "next/font/google";
import styles from "@/styles/Home.module.css";
import Calendar from "@/components/Calendar";
import { useEffect, useMemo, useState } from "react";
import AgePop from "@/components/PopUps/Age";
import { useUserStore } from "@/stores/useUserData";
import Event from "@/components/PopUps/Event";
import { useEvent } from "@/stores";
import { Quotes } from "@/components/Quotes";

const font = Gelasio({ weight: ["400", "500", "600"], subsets: ["latin"] });

export default function Home() {
  const quotes = require("../data/quotes.json");
  const { currentEvent } = useEvent();
  const { setExpectedAge, setBirth, birth, expectedAge } = useUserStore();

  const [hasInitializedStore, setHasInitializedStore] = useState(false);
  const [currentPopupWindow, setCurrentPopupWindow] = useState<number | null>(
    0,
  );

  useEffect(() => {
    if (!hasInitializedStore && typeof window !== "undefined") {

      const localExpectedAge = localStorage.getItem("expected_age");
      const localBirth = localStorage.getItem("age");

      setExpectedAge(
        localExpectedAge ? parseInt(localExpectedAge) : expectedAge,
      );
      setBirth(localBirth ? localBirth : birth);
      setHasInitializedStore(true);
    }
  }, [hasInitializedStore]);

  useEffect(() => {
    if (currentEvent !== null) {
      document.body.style.overflow = "hidden";
      document.body.style.maxHeight = "100vh";
    } else {
      document.body.style.overflow = "unset";
      document.body.style.maxHeight = "unset";
    }
  }, [currentEvent]);

  return (
    <>
      <Head>
        <title>Till Die - Reflecting on Life</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${font.className}`}>
        {hasInitializedStore && !localStorage.getItem("is_valid") && (
          <AgePop
            currentWindow={currentPopupWindow}
            setCurrentWindow={setCurrentPopupWindow}
          />
        )}

        <h1 className="main-title">TILL DIE</h1>

        {hasInitializedStore && (
          <Calendar
            userBirth={birth}
            expectedAge={expectedAge}
            currentPopupWindow={currentPopupWindow}
          />
        )}

        {currentEvent && <Event />}

        {hasInitializedStore && <Quotes quotes={quotes} />}
      </main>
    </>
  );
}
